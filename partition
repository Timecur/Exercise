https://leetcode-cn.com/explore/interview/card/top-interview-quesitons-in-2018/275/string/1137/


记忆化搜索：

class Solution {
public:
    
    vector<vector<string> >vres;

    bool isPalindrome(string s, int left, int right){
	    while (left <= right){
		    if (s[left] != s[right])
			    return false;
		    left++;
		    right--;
	    }
	    return true;
    }

     void DFS(string s, int start, vector<vector<int> >find, vector<string> &vstr){
        if (start >= s.size()){
            vres.push_back(vstr);
            return;
        }

        for (int i = start+1; i <= s.size(); i++){
            if (find[start][i-1] < 0){
                if (isPalindrome(s, start, i-1)){
                    find[start][i-1] = 1;
                }
            }
            if (find[start][i-1] > 0){
                vstr.push_back(s.substr(start, i - start));
                DFS(s, i, find, vstr);
                vstr.pop_back();
            }
        }
        return;
    }

     vector<vector<string> > partition(string s) {
        vector<vector<int> >find(s.size(), vector<int>(s.size(), -1));
        vector<string> vstr;
        DFS(s, 0, find, vstr);

        return vres;
    }
};
